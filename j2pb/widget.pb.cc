// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: widget.proto

#include "widget.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_widget_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SomeMessage_Image_widget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_widget_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SomeMessage_Text_widget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_widget_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SomeMessage_Widget_widget_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_widget_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SomeMessage_Window_widget_2eproto;
class SomeMessage_WindowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SomeMessage_Window> _instance;
} _SomeMessage_Window_default_instance_;
class SomeMessage_ImageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SomeMessage_Image> _instance;
} _SomeMessage_Image_default_instance_;
class SomeMessage_TextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SomeMessage_Text> _instance;
} _SomeMessage_Text_default_instance_;
class SomeMessage_WidgetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SomeMessage_Widget> _instance;
} _SomeMessage_Widget_default_instance_;
class SomeMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SomeMessage> _instance;
} _SomeMessage_default_instance_;
static void InitDefaultsscc_info_SomeMessage_widget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SomeMessage_default_instance_;
    new (ptr) ::SomeMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SomeMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SomeMessage_widget_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SomeMessage_widget_2eproto}, {
      &scc_info_SomeMessage_Widget_widget_2eproto.base,}};

static void InitDefaultsscc_info_SomeMessage_Image_widget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SomeMessage_Image_default_instance_;
    new (ptr) ::SomeMessage_Image();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SomeMessage_Image::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SomeMessage_Image_widget_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SomeMessage_Image_widget_2eproto}, {}};

static void InitDefaultsscc_info_SomeMessage_Text_widget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SomeMessage_Text_default_instance_;
    new (ptr) ::SomeMessage_Text();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SomeMessage_Text::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SomeMessage_Text_widget_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SomeMessage_Text_widget_2eproto}, {}};

static void InitDefaultsscc_info_SomeMessage_Widget_widget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SomeMessage_Widget_default_instance_;
    new (ptr) ::SomeMessage_Widget();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SomeMessage_Widget::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SomeMessage_Widget_widget_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_SomeMessage_Widget_widget_2eproto}, {
      &scc_info_SomeMessage_Window_widget_2eproto.base,
      &scc_info_SomeMessage_Image_widget_2eproto.base,
      &scc_info_SomeMessage_Text_widget_2eproto.base,}};

static void InitDefaultsscc_info_SomeMessage_Window_widget_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SomeMessage_Window_default_instance_;
    new (ptr) ::SomeMessage_Window();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SomeMessage_Window::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SomeMessage_Window_widget_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SomeMessage_Window_widget_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_widget_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_widget_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_widget_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_widget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Window, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Window, title_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Window, name_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Window, width_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Window, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Image, src_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Image, name_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Image, hoffset_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Image, voffset_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Image, alignment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, data_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, size_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, style_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, name_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, hoffset_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, voffset_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, alignment_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Text, onmouseup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Widget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Widget, debug_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Widget, window_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Widget, image_),
  PROTOBUF_FIELD_OFFSET(::SomeMessage_Widget, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SomeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SomeMessage, widget_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SomeMessage_Window)},
  { 9, -1, sizeof(::SomeMessage_Image)},
  { 19, -1, sizeof(::SomeMessage_Text)},
  { 32, -1, sizeof(::SomeMessage_Widget)},
  { 41, -1, sizeof(::SomeMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SomeMessage_Window_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SomeMessage_Image_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SomeMessage_Text_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SomeMessage_Widget_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SomeMessage_default_instance_),
};

const char descriptor_table_protodef_widget_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014widget.proto\"\336\003\n\013SomeMessage\022#\n\006widget"
  "\030\001 \001(\0132\023.SomeMessage.Widget\032D\n\006Window\022\r\n"
  "\005title\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005width\030\003 \001("
  "\r\022\016\n\006height\030\004 \001(\r\032W\n\005Image\022\013\n\003src\030\001 \001(\t\022"
  "\014\n\004name\030\002 \001(\t\022\017\n\007hOffset\030\003 \001(\r\022\017\n\007vOffse"
  "t\030\004 \001(\r\022\021\n\talignment\030\005 \001(\t\032\207\001\n\004Text\022\014\n\004d"
  "ata\030\001 \001(\t\022\014\n\004size\030\002 \001(\r\022\r\n\005style\030\003 \001(\t\022\014"
  "\n\004name\030\004 \001(\t\022\017\n\007hOffset\030\005 \001(\r\022\017\n\007vOffset"
  "\030\006 \001(\r\022\021\n\talignment\030\007 \001(\t\022\021\n\tonMouseUp\030\010"
  " \001(\t\032\200\001\n\006Widget\022\r\n\005debug\030\001 \001(\t\022#\n\006window"
  "\030\002 \003(\0132\023.SomeMessage.Window\022!\n\005image\030\003 \001"
  "(\0132\022.SomeMessage.Image\022\037\n\004text\030\004 \001(\0132\021.S"
  "omeMessage.Textb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_widget_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_widget_2eproto_sccs[5] = {
  &scc_info_SomeMessage_widget_2eproto.base,
  &scc_info_SomeMessage_Image_widget_2eproto.base,
  &scc_info_SomeMessage_Text_widget_2eproto.base,
  &scc_info_SomeMessage_Widget_widget_2eproto.base,
  &scc_info_SomeMessage_Window_widget_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_widget_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_widget_2eproto = {
  false, false, descriptor_table_protodef_widget_2eproto, "widget.proto", 503,
  &descriptor_table_widget_2eproto_once, descriptor_table_widget_2eproto_sccs, descriptor_table_widget_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_widget_2eproto::offsets,
  file_level_metadata_widget_2eproto, 5, file_level_enum_descriptors_widget_2eproto, file_level_service_descriptors_widget_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_widget_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_widget_2eproto)), true);

// ===================================================================

void SomeMessage_Window::InitAsDefaultInstance() {
}
class SomeMessage_Window::_Internal {
 public:
};

SomeMessage_Window::SomeMessage_Window(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SomeMessage.Window)
}
SomeMessage_Window::SomeMessage_Window(const SomeMessage_Window& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&width_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:SomeMessage.Window)
}

void SomeMessage_Window::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SomeMessage_Window_widget_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
}

SomeMessage_Window::~SomeMessage_Window() {
  // @@protoc_insertion_point(destructor:SomeMessage.Window)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SomeMessage_Window::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SomeMessage_Window::ArenaDtor(void* object) {
  SomeMessage_Window* _this = reinterpret_cast< SomeMessage_Window* >(object);
  (void)_this;
}
void SomeMessage_Window::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SomeMessage_Window::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SomeMessage_Window& SomeMessage_Window::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SomeMessage_Window_widget_2eproto.base);
  return *internal_default_instance();
}


void SomeMessage_Window::Clear() {
// @@protoc_insertion_point(message_clear_start:SomeMessage.Window)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&width_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SomeMessage_Window::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Window.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Window.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 width = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SomeMessage_Window::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SomeMessage.Window)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Window.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Window.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint32 width = 3;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_width(), target);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SomeMessage.Window)
  return target;
}

size_t SomeMessage_Window::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SomeMessage.Window)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_width());
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SomeMessage_Window::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SomeMessage.Window)
  GOOGLE_DCHECK_NE(&from, this);
  const SomeMessage_Window* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SomeMessage_Window>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SomeMessage.Window)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SomeMessage.Window)
    MergeFrom(*source);
  }
}

void SomeMessage_Window::MergeFrom(const SomeMessage_Window& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SomeMessage.Window)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void SomeMessage_Window::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SomeMessage.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeMessage_Window::CopyFrom(const SomeMessage_Window& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SomeMessage.Window)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeMessage_Window::IsInitialized() const {
  return true;
}

void SomeMessage_Window::InternalSwap(SomeMessage_Window* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SomeMessage_Window, height_)
      + sizeof(SomeMessage_Window::height_)
      - PROTOBUF_FIELD_OFFSET(SomeMessage_Window, width_)>(
          reinterpret_cast<char*>(&width_),
          reinterpret_cast<char*>(&other->width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SomeMessage_Window::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SomeMessage_Image::InitAsDefaultInstance() {
}
class SomeMessage_Image::_Internal {
 public:
};

SomeMessage_Image::SomeMessage_Image(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SomeMessage.Image)
}
SomeMessage_Image::SomeMessage_Image(const SomeMessage_Image& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  src_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_src().empty()) {
    src_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_src(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  alignment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alignment().empty()) {
    alignment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_alignment(),
      GetArena());
  }
  ::memcpy(&hoffset_, &from.hoffset_,
    static_cast<size_t>(reinterpret_cast<char*>(&voffset_) -
    reinterpret_cast<char*>(&hoffset_)) + sizeof(voffset_));
  // @@protoc_insertion_point(copy_constructor:SomeMessage.Image)
}

void SomeMessage_Image::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SomeMessage_Image_widget_2eproto.base);
  src_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alignment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&hoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voffset_) -
      reinterpret_cast<char*>(&hoffset_)) + sizeof(voffset_));
}

SomeMessage_Image::~SomeMessage_Image() {
  // @@protoc_insertion_point(destructor:SomeMessage.Image)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SomeMessage_Image::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  src_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alignment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SomeMessage_Image::ArenaDtor(void* object) {
  SomeMessage_Image* _this = reinterpret_cast< SomeMessage_Image* >(object);
  (void)_this;
}
void SomeMessage_Image::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SomeMessage_Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SomeMessage_Image& SomeMessage_Image::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SomeMessage_Image_widget_2eproto.base);
  return *internal_default_instance();
}


void SomeMessage_Image::Clear() {
// @@protoc_insertion_point(message_clear_start:SomeMessage.Image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alignment_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&hoffset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voffset_) -
      reinterpret_cast<char*>(&hoffset_)) + sizeof(voffset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SomeMessage_Image::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string src = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_src();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Image.src"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Image.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 hOffset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          hoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 vOffset = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          voffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alignment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_alignment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Image.alignment"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SomeMessage_Image::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SomeMessage.Image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string src = 1;
  if (this->src().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_src().data(), static_cast<int>(this->_internal_src().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Image.src");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_src(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Image.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint32 hOffset = 3;
  if (this->hoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_hoffset(), target);
  }

  // uint32 vOffset = 4;
  if (this->voffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_voffset(), target);
  }

  // string alignment = 5;
  if (this->alignment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alignment().data(), static_cast<int>(this->_internal_alignment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Image.alignment");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_alignment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SomeMessage.Image)
  return target;
}

size_t SomeMessage_Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SomeMessage.Image)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string src = 1;
  if (this->src().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_src());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string alignment = 5;
  if (this->alignment().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alignment());
  }

  // uint32 hOffset = 3;
  if (this->hoffset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_hoffset());
  }

  // uint32 vOffset = 4;
  if (this->voffset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_voffset());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SomeMessage_Image::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SomeMessage.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const SomeMessage_Image* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SomeMessage_Image>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SomeMessage.Image)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SomeMessage.Image)
    MergeFrom(*source);
  }
}

void SomeMessage_Image::MergeFrom(const SomeMessage_Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SomeMessage.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src().size() > 0) {
    _internal_set_src(from._internal_src());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.alignment().size() > 0) {
    _internal_set_alignment(from._internal_alignment());
  }
  if (from.hoffset() != 0) {
    _internal_set_hoffset(from._internal_hoffset());
  }
  if (from.voffset() != 0) {
    _internal_set_voffset(from._internal_voffset());
  }
}

void SomeMessage_Image::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SomeMessage.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeMessage_Image::CopyFrom(const SomeMessage_Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SomeMessage.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeMessage_Image::IsInitialized() const {
  return true;
}

void SomeMessage_Image::InternalSwap(SomeMessage_Image* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  src_.Swap(&other->src_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alignment_.Swap(&other->alignment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SomeMessage_Image, voffset_)
      + sizeof(SomeMessage_Image::voffset_)
      - PROTOBUF_FIELD_OFFSET(SomeMessage_Image, hoffset_)>(
          reinterpret_cast<char*>(&hoffset_),
          reinterpret_cast<char*>(&other->hoffset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SomeMessage_Image::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SomeMessage_Text::InitAsDefaultInstance() {
}
class SomeMessage_Text::_Internal {
 public:
};

SomeMessage_Text::SomeMessage_Text(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SomeMessage.Text)
}
SomeMessage_Text::SomeMessage_Text(const SomeMessage_Text& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  style_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_style().empty()) {
    style_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_style(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  alignment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_alignment().empty()) {
    alignment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_alignment(),
      GetArena());
  }
  onmouseup_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_onmouseup().empty()) {
    onmouseup_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_onmouseup(),
      GetArena());
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&voffset_) -
    reinterpret_cast<char*>(&size_)) + sizeof(voffset_));
  // @@protoc_insertion_point(copy_constructor:SomeMessage.Text)
}

void SomeMessage_Text::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SomeMessage_Text_widget_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  style_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alignment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  onmouseup_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voffset_) -
      reinterpret_cast<char*>(&size_)) + sizeof(voffset_));
}

SomeMessage_Text::~SomeMessage_Text() {
  // @@protoc_insertion_point(destructor:SomeMessage.Text)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SomeMessage_Text::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  style_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alignment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  onmouseup_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SomeMessage_Text::ArenaDtor(void* object) {
  SomeMessage_Text* _this = reinterpret_cast< SomeMessage_Text* >(object);
  (void)_this;
}
void SomeMessage_Text::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SomeMessage_Text::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SomeMessage_Text& SomeMessage_Text::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SomeMessage_Text_widget_2eproto.base);
  return *internal_default_instance();
}


void SomeMessage_Text::Clear() {
// @@protoc_insertion_point(message_clear_start:SomeMessage.Text)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  style_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alignment_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  onmouseup_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&voffset_) -
      reinterpret_cast<char*>(&size_)) + sizeof(voffset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SomeMessage_Text::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Text.data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string style = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_style();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Text.style"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Text.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 hOffset = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          hoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 vOffset = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          voffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string alignment = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_alignment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Text.alignment"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string onMouseUp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_onmouseup();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Text.onMouseUp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SomeMessage_Text::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SomeMessage.Text)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Text.data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data(), target);
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_size(), target);
  }

  // string style = 3;
  if (this->style().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_style().data(), static_cast<int>(this->_internal_style().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Text.style");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_style(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Text.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // uint32 hOffset = 5;
  if (this->hoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_hoffset(), target);
  }

  // uint32 vOffset = 6;
  if (this->voffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_voffset(), target);
  }

  // string alignment = 7;
  if (this->alignment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alignment().data(), static_cast<int>(this->_internal_alignment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Text.alignment");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_alignment(), target);
  }

  // string onMouseUp = 8;
  if (this->onmouseup().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_onmouseup().data(), static_cast<int>(this->_internal_onmouseup().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Text.onMouseUp");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_onmouseup(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SomeMessage.Text)
  return target;
}

size_t SomeMessage_Text::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SomeMessage.Text)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  // string style = 3;
  if (this->style().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_style());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string alignment = 7;
  if (this->alignment().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alignment());
  }

  // string onMouseUp = 8;
  if (this->onmouseup().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_onmouseup());
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_size());
  }

  // uint32 hOffset = 5;
  if (this->hoffset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_hoffset());
  }

  // uint32 vOffset = 6;
  if (this->voffset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_voffset());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SomeMessage_Text::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SomeMessage.Text)
  GOOGLE_DCHECK_NE(&from, this);
  const SomeMessage_Text* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SomeMessage_Text>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SomeMessage.Text)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SomeMessage.Text)
    MergeFrom(*source);
  }
}

void SomeMessage_Text::MergeFrom(const SomeMessage_Text& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SomeMessage.Text)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.style().size() > 0) {
    _internal_set_style(from._internal_style());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.alignment().size() > 0) {
    _internal_set_alignment(from._internal_alignment());
  }
  if (from.onmouseup().size() > 0) {
    _internal_set_onmouseup(from._internal_onmouseup());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.hoffset() != 0) {
    _internal_set_hoffset(from._internal_hoffset());
  }
  if (from.voffset() != 0) {
    _internal_set_voffset(from._internal_voffset());
  }
}

void SomeMessage_Text::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SomeMessage.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeMessage_Text::CopyFrom(const SomeMessage_Text& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SomeMessage.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeMessage_Text::IsInitialized() const {
  return true;
}

void SomeMessage_Text::InternalSwap(SomeMessage_Text* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  style_.Swap(&other->style_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  alignment_.Swap(&other->alignment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  onmouseup_.Swap(&other->onmouseup_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SomeMessage_Text, voffset_)
      + sizeof(SomeMessage_Text::voffset_)
      - PROTOBUF_FIELD_OFFSET(SomeMessage_Text, size_)>(
          reinterpret_cast<char*>(&size_),
          reinterpret_cast<char*>(&other->size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SomeMessage_Text::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SomeMessage_Widget::InitAsDefaultInstance() {
  ::_SomeMessage_Widget_default_instance_._instance.get_mutable()->image_ = const_cast< ::SomeMessage_Image*>(
      ::SomeMessage_Image::internal_default_instance());
  ::_SomeMessage_Widget_default_instance_._instance.get_mutable()->text_ = const_cast< ::SomeMessage_Text*>(
      ::SomeMessage_Text::internal_default_instance());
}
class SomeMessage_Widget::_Internal {
 public:
  static const ::SomeMessage_Image& image(const SomeMessage_Widget* msg);
  static const ::SomeMessage_Text& text(const SomeMessage_Widget* msg);
};

const ::SomeMessage_Image&
SomeMessage_Widget::_Internal::image(const SomeMessage_Widget* msg) {
  return *msg->image_;
}
const ::SomeMessage_Text&
SomeMessage_Widget::_Internal::text(const SomeMessage_Widget* msg) {
  return *msg->text_;
}
SomeMessage_Widget::SomeMessage_Widget(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  window_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SomeMessage.Widget)
}
SomeMessage_Widget::SomeMessage_Widget(const SomeMessage_Widget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      window_(from.window_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  debug_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_debug().empty()) {
    debug_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_debug(),
      GetArena());
  }
  if (from._internal_has_image()) {
    image_ = new ::SomeMessage_Image(*from.image_);
  } else {
    image_ = nullptr;
  }
  if (from._internal_has_text()) {
    text_ = new ::SomeMessage_Text(*from.text_);
  } else {
    text_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:SomeMessage.Widget)
}

void SomeMessage_Widget::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SomeMessage_Widget_widget_2eproto.base);
  debug_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&text_) -
      reinterpret_cast<char*>(&image_)) + sizeof(text_));
}

SomeMessage_Widget::~SomeMessage_Widget() {
  // @@protoc_insertion_point(destructor:SomeMessage.Widget)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SomeMessage_Widget::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  debug_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete text_;
}

void SomeMessage_Widget::ArenaDtor(void* object) {
  SomeMessage_Widget* _this = reinterpret_cast< SomeMessage_Widget* >(object);
  (void)_this;
}
void SomeMessage_Widget::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SomeMessage_Widget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SomeMessage_Widget& SomeMessage_Widget::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SomeMessage_Widget_widget_2eproto.base);
  return *internal_default_instance();
}


void SomeMessage_Widget::Clear() {
// @@protoc_insertion_point(message_clear_start:SomeMessage.Widget)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  window_.Clear();
  debug_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && image_ != nullptr) {
    delete image_;
  }
  image_ = nullptr;
  if (GetArena() == nullptr && text_ != nullptr) {
    delete text_;
  }
  text_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SomeMessage_Widget::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string debug = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_debug();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SomeMessage.Widget.debug"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .SomeMessage.Window window = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_window(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .SomeMessage.Image image = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_image(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .SomeMessage.Text text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SomeMessage_Widget::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SomeMessage.Widget)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string debug = 1;
  if (this->debug().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_debug().data(), static_cast<int>(this->_internal_debug().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SomeMessage.Widget.debug");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_debug(), target);
  }

  // repeated .SomeMessage.Window window = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_window_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_window(i), target, stream);
  }

  // .SomeMessage.Image image = 3;
  if (this->has_image()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::image(this), target, stream);
  }

  // .SomeMessage.Text text = 4;
  if (this->has_text()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::text(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SomeMessage.Widget)
  return target;
}

size_t SomeMessage_Widget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SomeMessage.Widget)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SomeMessage.Window window = 2;
  total_size += 1UL * this->_internal_window_size();
  for (const auto& msg : this->window_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string debug = 1;
  if (this->debug().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_debug());
  }

  // .SomeMessage.Image image = 3;
  if (this->has_image()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // .SomeMessage.Text text = 4;
  if (this->has_text()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *text_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SomeMessage_Widget::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SomeMessage.Widget)
  GOOGLE_DCHECK_NE(&from, this);
  const SomeMessage_Widget* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SomeMessage_Widget>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SomeMessage.Widget)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SomeMessage.Widget)
    MergeFrom(*source);
  }
}

void SomeMessage_Widget::MergeFrom(const SomeMessage_Widget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SomeMessage.Widget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  window_.MergeFrom(from.window_);
  if (from.debug().size() > 0) {
    _internal_set_debug(from._internal_debug());
  }
  if (from.has_image()) {
    _internal_mutable_image()->::SomeMessage_Image::MergeFrom(from._internal_image());
  }
  if (from.has_text()) {
    _internal_mutable_text()->::SomeMessage_Text::MergeFrom(from._internal_text());
  }
}

void SomeMessage_Widget::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SomeMessage.Widget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeMessage_Widget::CopyFrom(const SomeMessage_Widget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SomeMessage.Widget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeMessage_Widget::IsInitialized() const {
  return true;
}

void SomeMessage_Widget::InternalSwap(SomeMessage_Widget* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  window_.InternalSwap(&other->window_);
  debug_.Swap(&other->debug_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SomeMessage_Widget, text_)
      + sizeof(SomeMessage_Widget::text_)
      - PROTOBUF_FIELD_OFFSET(SomeMessage_Widget, image_)>(
          reinterpret_cast<char*>(&image_),
          reinterpret_cast<char*>(&other->image_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SomeMessage_Widget::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SomeMessage::InitAsDefaultInstance() {
  ::_SomeMessage_default_instance_._instance.get_mutable()->widget_ = const_cast< ::SomeMessage_Widget*>(
      ::SomeMessage_Widget::internal_default_instance());
}
class SomeMessage::_Internal {
 public:
  static const ::SomeMessage_Widget& widget(const SomeMessage* msg);
};

const ::SomeMessage_Widget&
SomeMessage::_Internal::widget(const SomeMessage* msg) {
  return *msg->widget_;
}
SomeMessage::SomeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:SomeMessage)
}
SomeMessage::SomeMessage(const SomeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_widget()) {
    widget_ = new ::SomeMessage_Widget(*from.widget_);
  } else {
    widget_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:SomeMessage)
}

void SomeMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SomeMessage_widget_2eproto.base);
  widget_ = nullptr;
}

SomeMessage::~SomeMessage() {
  // @@protoc_insertion_point(destructor:SomeMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SomeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete widget_;
}

void SomeMessage::ArenaDtor(void* object) {
  SomeMessage* _this = reinterpret_cast< SomeMessage* >(object);
  (void)_this;
}
void SomeMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SomeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SomeMessage& SomeMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SomeMessage_widget_2eproto.base);
  return *internal_default_instance();
}


void SomeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:SomeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && widget_ != nullptr) {
    delete widget_;
  }
  widget_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SomeMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .SomeMessage.Widget widget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_widget(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SomeMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SomeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SomeMessage.Widget widget = 1;
  if (this->has_widget()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::widget(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SomeMessage)
  return target;
}

size_t SomeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SomeMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SomeMessage.Widget widget = 1;
  if (this->has_widget()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *widget_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SomeMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SomeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SomeMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SomeMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SomeMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SomeMessage)
    MergeFrom(*source);
  }
}

void SomeMessage::MergeFrom(const SomeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SomeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_widget()) {
    _internal_mutable_widget()->::SomeMessage_Widget::MergeFrom(from._internal_widget());
  }
}

void SomeMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SomeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeMessage::CopyFrom(const SomeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SomeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeMessage::IsInitialized() const {
  return true;
}

void SomeMessage::InternalSwap(SomeMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(widget_, other->widget_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SomeMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SomeMessage_Window* Arena::CreateMaybeMessage< ::SomeMessage_Window >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SomeMessage_Window >(arena);
}
template<> PROTOBUF_NOINLINE ::SomeMessage_Image* Arena::CreateMaybeMessage< ::SomeMessage_Image >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SomeMessage_Image >(arena);
}
template<> PROTOBUF_NOINLINE ::SomeMessage_Text* Arena::CreateMaybeMessage< ::SomeMessage_Text >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SomeMessage_Text >(arena);
}
template<> PROTOBUF_NOINLINE ::SomeMessage_Widget* Arena::CreateMaybeMessage< ::SomeMessage_Widget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SomeMessage_Widget >(arena);
}
template<> PROTOBUF_NOINLINE ::SomeMessage* Arena::CreateMaybeMessage< ::SomeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SomeMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
